{"version":3,"file":"sandermatch.js","sources":["../.gobble-build/01-source/sandermatch.js"],"sourcesContent":["\nvar sander = require( 'sander' );\n\n\n// Synchronous helper function - given an array of filenames, run the minimatch\n// patterns.\nfunction _filterPattern(filenames, patterns) {\n\t\n\tvar minimatch = require( 'minimatch' ),\n\t    matching = new Set();\n\t\n\tif ( !Array.isArray(patterns) ) {\n\t\tpatterns = [ patterns ];\n\t}\n\t\t\n\tfor (var pattern of patterns) {\n\t\tfor (var filename of filenames) {\n\t\t\tif (minimatch(filename, pattern)) {\n\t\t\t\tmatching.add(filename);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn matching;\n}\n\n\n\n// @function lsr(...paths, patterns): Promise\n// Returns a promise of an Set of filenames: the result of doing a recursive\n// file listing on the paths (like the 'lsr' function of sander.js), then \n// filtered by the minimatch patterns.\n// The `patterns` argument is a minimatch expression (which can be a string or\n// an array of minimatch expressions).\n// As the result is a Set, a filename will appear at most once, and filenames\n// will be ordered, the ones matching the first pattern first.\nexport function lsrMatch() {\t// Apparently babelJS chokes on `(...paths, patterns)`\n\tvar patterns = arguments[arguments.length-1];\n\tvar paths = Array.prototype.slice.call(arguments, 0, arguments.length-1);\n\treturn sander.lsr.apply( this, paths ).then( allFiles => {\n\t\treturn _filterPattern(allFiles, patterns);\n\t});\n};\n\n// @function lsrMatchSync(...paths, patterns): Promise\n// like `lsrMatch`, but using the 'lsrSync' function of sander.js instead.\nexport function lsrMatchSync() {\t// Apparently babelJS chokes on `(...paths, patterns)`\n\tvar patterns = arguments[arguments.length-1];\n\tvar paths = Array.prototype.slice.call(arguments, 0, arguments.length-1);\n\treturn sander.lsrSync.apply( this, paths ).then( allFiles => {\n\t\treturn _filterPattern(allFiles, patterns);\n\t});\n};\n\n// @function readdirMatch(...paths, patterns): Promise\n// like `lsrMatch`, but using the 'readdir' function of sander.js instead.\nexport function readdirMatch() {\t// Apparently babelJS chokes on `(...paths, patterns)`\n\tvar patterns = arguments[arguments.length-1];\n\tvar paths = Array.prototype.slice.call(arguments, 0, arguments.length-1);\n\treturn sander.readdir.apply( this, paths ).then( allFiles => {\n\t\treturn _filterPattern(allFiles, patterns);\n\t});\n};\n\n// @function readdirMatchSync(...paths, patterns): Promise\n// like `lsrMatch`, but using the 'readdirSync' function of sander.js instead.\nexport function readdirMatchSync() {\t// Apparently babelJS chokes on `(...paths, patterns)`\n\tvar patterns = arguments[arguments.length-1];\n\tvar paths = Array.prototype.slice.call(arguments, 0, arguments.length-1);\n\treturn sander.readdirSync.apply( this, paths ).then( allFiles => {\n\t\treturn _filterPattern(allFiles, patterns);\n\t});\n};\n\n\n"],"names":[],"mappings":"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"}